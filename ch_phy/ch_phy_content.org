\label{ch:phy}

\begin{frame}[title={bg=Hauptgebaeude_Tag}]
 \maketitle 
\end{frame}


#+LATEX_HEADER: \usepackage{tcolorbox}
#+LATEX_HEADER: \tcbset{colback=hpiblue!10,colframe=hpiblue,before skip=2ex,after skip=2ex}

**** The story so far  

- Basic concepts for networking established
  - In particular, signals vs. data, duplexing, multiplexing, switching
    (circuit or packet) vs. forwarding vs. routing
- Basic architectural approaches
  - Layering
  - Reference models: ISO/OSI vs. TCP/IP 


**** Plans for this chapter 

- Answer the basic question: how can data be transported over a physical medium?
- Understand the basic service provided by a physical layer
- Different ways to put ``bits on the wire''
- Reasons why performance of any physical layer is limited
- Reasons for errors
- A few examples of important physical layers
\pause 
- Note: This is vastly simplified material

** Baseband

*** Observations 

**** Basic service of physical layer: transport bits
- Physical layer  transports bits between two locations A and B

#+caption: Bits get turned into voltage levels over a physical medium by an example PHY protocol
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:service}
#+NAME: fig:phy:service
[[./standalone/phy.pdf]]




**** A bit $\leftrightarrow$ signal conversion rule
A simple conversion rule
- For a ``1'' bit, apply voltage to the pair of wires
- For a ``0'' bit, no voltage




**** Example: Transmit bit pattern for character ``b''
- Character ``b'' needs a representation as a sequence of bits
- One option: Use the ASCII code of ``b'', 98, as a binary number 01100010
- Resulting voltage put on wire: Figure \ref{fig:phy:ascii_b}


#+caption: Turning a bit sequence into voltage changes
#+attr_latex: :width 0.95\textwidth :height 0.5\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:ascii_b}
#+NAME: fig:phy:ascii_b
[[./standalone/plots.pdf]]




**** What arrives at the receiver?
- Typical pattern at the receiver:

#+caption: Typical pattern arriving at a receiver when sending the voltage pattern from Figure \ref{fig:phy:ascii_b}
#+attr_latex: :width 0.95\textwidth :height 0.5\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:lowpass:noisy}
#+NAME: fig:phy:fourier:lowpass:noisy
[[./standalone/plots.pdf]]


\pause 
What is going on here? 



**** Physical media transmit waves! 
- Fact: Most signals create  ``coupled oscillations'' 
  - I.e., a wave 
    - E.g.: sound, radiomagnetic waves, … 
  - And different waves travel differently 
\pause 
- To understand signal propagation in a physical medium, some
  background is required how signals can be described as
  oscillations/waves 


*** Fourier 



**** Some background: Fourier analysis

***** Fourier’s theorem                                           :B_theorem:
      :PROPERTIES:
      :BEAMER_env: theorem
      :END:

Any (reasonable, e.g., partially continuous)  *periodic* function g(t) with period $T$ can be *written as* a (possibly infinite) sum of sine and cosine functions; the frequencies of these functions are integer multiples of the fundamental frequency f = 1/T. 

\begin{tcolorbox}
\begin{equation}
\label{eq:fourier}
g(t) = 1/2c + \sum_{n=1}^\infty a_n \sin(2\pi n f t) + \sum _{n=1}^\infty b_n \cos(2\pi n f t )
\end{equation}
\end{tcolorbox}



**** Terminology for Fourier series 
***** Fourier series / frequency-domain representation         :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

Eq. \ref{eq:fourier} is called the *Fourier series* representation
  of $g$. It is also called the *\gls{frequencydomain}* (to distinguish
  from the usual representation as a function of time in the *time domain*)

\pause 

***** \Gls{fourieranalysis}                                    :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{fourieranalysis}


\pause

***** \Gls{DC}                                                 :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{DC}

\pause

***** \Gls{harmonics}                                          :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \glsdesc{harmonics}

\pause



 Why squares? Say, $g(t)$ shows voltage $\leadsto$ Power 
  $P = U \cdot I = U \cdot (U/R) = \frac{1}{R} g^2(t)$

**** Good news: Orthogonal base system
 
- Function family  ${\sin(2n \pi f t), \cos(2n \pi ft) }$ forms an
  *orthogonal base system* of all functions with period $T$ 
  - For fixed *base frequency* $f = 1/T$, $n=1, \dots, \infty$ 
  - Orthogonal under scalar product $<f, g> = \int_{t=0}^T f(t) g(t)  \mathrm{d}t$
\pause 
- Allows to calculate coefficients! 

**** Fourier analysis – computing coefficients
- Coefficients $c, a_n, b_n$ in the Fourier series can be computed using
  orthogonality 
- Homework: convince yourself that
  - $\int_{t=0}^T \sin (2\pi n f t) \cos (2\pi m f t) \mathrm{d}t = 0$ for
    any $n, m$. 
  - $\int_{t=0}^T \sin (2\pi n f t) \sin (2\pi m f t) \mathrm{d}t = 0$ for
    any $n \not= m$. 
  - $\int_{t=0}^T \sin (2\pi n f t) \sin (2\pi n f t) \mathrm{d}t = T/2$ for
    any $n$.
  - Hint: Standard trigonometric identities 
\pause 
- These identities help  calculating $a_n$, $b_n$ 

**** Fourier analysis – computing coefficients
 
We find: 

- $c = \frac{2}{T} \int_{t=0}^T g(t) \mathrm{d}t$
- $a_n = \frac{2}{T} \int_{t=0}^T g(t) \sin(2\pi nf t) \mathrm{d}t$
- $b_n = \frac{2}{T} \int_{t=0}^T g(t) \cos(2\pi nf t) \mathrm{d}t$

**** Fourier analysis - Compute! 

- Compute $a_1$ for the function 

#+caption: Example function with period $T$ to compute Fourier coefficients 
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:simple_fourier}
#+NAME: fig:phy:simple_fourier
[[./standalone/plot2.pdf]]





**** Functions with finite Fourier transform 

- Eq \ref{eq:fourier} tells us that this sum exists
- But it says nothing about how many terms these sums have!
\pause 
- Case 1: $g$ can be written as a *finite sum*
  - Then, there is $n_\mathrm{lower}$ and $n_\mathrm{upper}$ with smallest
    and largest non-zero coefficients
  - \pause Corresponds to
    - Lower frequency $f_\mathrm{lower} = n_\mathrm{lower} \cdot f$
    - Upper frequency $f_\mathrm{upper} = n_\mathrm{upper} \cdot f$

**** Functions with infinite Fourier transform 

- Case 2: The Fourier series of $g$ is infinite
  - I.e., for any $n$, there is some $m> n$ such that $a_m \not = 0$
    or $b_m \not= 0$
  - \pause *Practically*, however, often $a_n$, $b_n$ fall off quickly
    (often, exponentially)
    - Power in high harmonics quickly goes  to zero 
  - \pause Cutting off above some $n_\mathrm{upper}$ *does* introduce
    an error, but often an acceptably small one
    - Size of acceptable error is more or less arbitrary
  - \pause Hence, we can still define $n_\mathrm{lower}$ and
    $n_\mathrm{upper}$ like above! 

**** Signal bandwidth 

***** \Gls{signalbw}                                           :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{signalbw}

\pause 
***** Example? 

So what is the signal bandwidth for ASCII letter ~b~ ? 


*** Example 

**** Challenging:  Fourier analysis for non-periodic signals? 

\vskip-2.5em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:


- The transmitted signal of ‘b’ is not a periodic signal – Fourier
  analysis not applicable directly
  - (Remark: The *continuous* Fourier *transform* is needed here; for
    signals with finitely many points, there is also a discrete Fourier transform)
\pause 
- We use a simplification here: *Pretend* signal is repeated infinitely often, resulting in a periodic waveform with period 8 bit times


***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   


\onslide<1->


#+caption: The direct representation of an ASCII b is not periodic and hence not directly amenable to Fourier analysis (copy of Figure \ref{fig:phy:ascii_b})
#+attr_latex: :width 0.95\textwidth :height 0.2\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:ascii_b}
#+NAME: fig:phy:ascii_b_2
[[./standalone/plots.pdf]]



\onslide<2->
#+caption: Simplification: pretend the signal is indefinitly, periodically repeated 
#+attr_latex: :width 0.95\textwidth :height 0.2\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:repeated_fourier}
#+NAME: fig:phy:repeated_fourier
[[./standalone/plot2.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:






**** Applying Fourier analysis to example

Compute  $a_n, b_n, c$ for $n \leq 1024$ 

#+caption: Showing $g(t)$ (in blue) and the first 1024 terms of the Fourier series (in red)
#+attr_latex: :width 0.95\textwidth :height 0.4\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:h_1024}
#+NAME: fig:phy:fourier:h_1024
[[./standalone/plots.pdf]]

\pause 

- *Almost* no discernible difference between original function and Fourier series
\pause 
- Signal bandwidth of red function? \pause $1024 \cdot  \frac{1}{8\,\mathrm{s}}  = 128\,\mathrm{Hz}$


**** Applying Fourier analysis to example: The spectrum 

***** Time-domain representation of ASCII b 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:

#+caption: ASCII b in time domain (repetition from Figure \ref{fig:phy:ascii_b})
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:ascii_b}
#+NAME: fig:phy:ascii_b_3
[[./standalone/plots.pdf]]



***** Frequency-domain  representation of ASCII b 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   

#+caption: ASCII b in frequency domain 
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:spectrum:ascii_b}
#+NAME: fig:phy:spectrum:ascii_b
[[./standalone/plots.pdf]]


*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:



**** Reducing signal bandwidth 

What happens when we just use 128 terms instead of 1024? 

#+caption: Showing $g(t)$ (in blue) and the first 128 terms of the Fourier series (in red)
#+attr_latex: :width 0.95\textwidth :height 0.4\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:h_128}
#+NAME: fig:phy:fourier:h_128
[[./standalone/plots.pdf]]

\pause 

Characteristic: ``wiggling'' at the points of discontinuitiy 
- Unavoidable when using finite Fourier series to approximate discontinuous signals! 
- Formally, so-called *Gibbs ringing*

**** Less and less signal bandwidth 

\begin{figure}
  \centering  \subfloat[][$n_\mathrm{upper}=64$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_64}]{standalone/plots.pdf}}
  \hfill
\subfloat[][$n_\mathrm{upper}=32$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_32}]{standalone/plots.pdf}}
  \hfill
\subfloat[][$n_\mathrm{upper}=16$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_16}]{standalone/plots.pdf}}
  \hfill
  \subfloat[][$n_\mathrm{upper}=8$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_8}]{standalone/plots.pdf}}
  \\
\subfloat[][$n_\mathrm{upper}=4$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_4}]{standalone/plots.pdf}}
  \hfill
\subfloat[][$n_\mathrm{upper}=2$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_2}]{standalone/plots.pdf}}
  \hfill
\subfloat[][$n_\mathrm{upper}=1$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_1}]{standalone/plots.pdf}}
  \hfill
\subfloat[][$n_\mathrm{upper}=0$]{\includegraphics[width=0.2\textwidth,page=\getpagerefnumber{page:phy:fourier:h_0}]{standalone/plots.pdf}}
\caption{Representing ASCII \texttt{b} with shorter and shorter Fourier series}
\label{fig:phy:fewer_and_fewer}
\end{figure}



**** Relevance: Channel effects! 

- Physical media affects different harmonics differently!
- Abstraction: *\Gls{channel}* turns a transmitted signal $g(t)$ into a
  received signal $\tilde{g}(t)$ 

#+caption: Channel turns transmitted signal $g$ into received signal $\tilde{g}$
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:fig:channel}
#+NAME: fig:fig:channel
[[./standalone/phy.pdf]]


\pause 
- Relationship between $g$ and $\tilde{g}$ often much easier to describe in
  frequency domain 
\pause 
- We will look at:
  - Attenuation
  - Distortion (very briefly)
  - Noise 


**** Channel 

***** \Gls{channel}                                            :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{channel}


*** Attenuation 


**** Attenuation 
- Typical behavior: *Attenuation*
- Intuition: Every signal looses *power* when traveling over a
  physical medium 

***** \Gls{attenuation} $\alpha$                               :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

\[\alpha  = \frac{P_\mathrm{transmitted}}{P_\mathrm{received}} \]

      \Glsdesc{attenuation}


\pause 
\vfill
Note: 
- High attenuation = low arriving power
- Attenuation depends on medium, distance, \dots 

**** Signal attenuation: Example

What is attenuation in Figure \ref{fig:phy:attenuated_simple_fourier}? 

#+caption: Example for attenuation of a signal (blue: transmitted, red: received signal)
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:attenuated_simple_fourier}
#+NAME: fig:phy:attenuated_simple_fourier
[[./standalone/plot2.pdf]]


**** Attenuation depends on frequency! 

- Real channels: different frequencies see different attenuation! 
  - So-called *frequency-selective attenuation*, $\alpha(f)$ 
- Formally: 

\begin{tcolorbox}
\[
\tilde{g}(t) = 1/2 \alert{\frac{1}{\sqrt{\alpha(0)}}} c + \sum_{n=1}^\infty 
\alert{\frac{1}{\sqrt{\alpha(n f)}}} a_n \sin(2\pi n f t) + \sum _{n=1}^\infty
\alert{\frac{1}{\sqrt{\alpha(n f)}}} b_n \cos(2\pi n f t )
\label{eq:fourier:freq_sel}
\]
\end{tcolorbox}

\pause 
- Example in Figure \ref{fig:phy:attenuated_simple_fourier}
  simplistically assumed
  so-called *flat attenuation* 

**** Frequency-selective attenuation: Simple cases

Some simplified cases: 
- (Simplified) *lowpass channel*: Channel has a cutoff frequency $f_\mathrm{cutoff}$
  - All harmonics *below* $f_\mathrm{cutoff}$ experience small
    attenuation 
  - All harmonics *above* $f_\mathrm{cutoff}$ experience infinite 
    attenuation 
\pause 
- (Simplified) *highpass channel*: Channel has a cutoff frequency $f_\mathrm{cutoff}$
  - All harmonics *above* $f_\mathrm{cutoff}$ experience small
    attenuation 
  - All harmonics *below* $f_\mathrm{cutoff}$ experience infinite 
    attenuation 
\pause 
- (Simplified) *bandpass channel*: Channel has a low cutoff
  frequency $f_\mathrm{low cutoff}$ and a high cutoff $f_\mathrm{high cutoff}$
  - All harmonics *between* $f_\mathrm{low cutoff}$ and
    $f_\mathrm{high cutoff}$ experience small
    attenuation 
  - All harmonics *outside* that  experience infinite 
    attenuation 


**** Example: Simplified lowpass channel transmit letter b 


#+caption: Sending ASCII b over a simplistic lowpass channel (attenuates to zero all over 0.5 Hz)
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:fig:channel:simplistic_lowpass}
#+NAME: fig:fig:channel:simplistic_lowpass
[[./standalone/plots.pdf]]




**** Frequency-selective attenuation: Realistic 

\vskip-2.5em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:



- Real physical media are more complicated
- But often still result in lowpass-like or bandpass-like channels 
- E.g., bathtub-like attenuation 


***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   

#+caption: Frequency-selective attenuation
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:channel_bandwidth}
#+NAME: fig:phy:channel_bandwidth
[[./standalone/phy.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:


**** Channel bandwidth 

- Similar argument to signal bandwidth
- Case 1: channel has a finite range of frequencies with attenuation
  below infinity
- Case 2: all frequencies pass through ``somehow''
  - Pragmatic: consider threshold for acceptable attenuation level
  - E.g., $\alpha \leq 2$
- Results in upper and lower frequencies
- Difference is *channel bandwidth* 

**** Channel bandwidth - definition 

***** \Gls{channelbw}                                          :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{channelbw}

**** Channels with limited bandwidth - more examples 



***** Semi-realistic lowpass channel 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:

#+caption: Receiving ASCII b over a semi-realistic lowpass channel (harmonics 0 and 1 not attenuated, larger harmonics $h$ attenuated as $1/h^4$)
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:lowpass}
#+NAME: fig:phy:fourier:lowpass
[[./standalone/plots.pdf]]


\pause

***** Semi-realistic bandpass channel 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   


#+caption: Receiving ASCII b over a semi-realistic lowpass channel (harmonic 0  not attenuated, weakly attenuates around $h=10$ with linear falloff)
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:bandpass}
#+NAME: fig:phy:fourier:bandpass
[[./standalone/plots.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:




**** Relationship of signal bandwidth and channel bandwidth? 

- Signal bandwidth: Harmonics important to represent a signal
  - We have control over this!
- Channel bandwidth: usable frequency range of a channel
  - Usually, no control! 
- Cases? 

**** Relationship of signal bandwidth and channel bandwidth - Cases? 




***** Signal BW fits in Channel BW: ok 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.3
      :END:

#+caption: Signal bandwidth fits into channel bandwidth - desirable situation
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:channel_bandwidth:small_signalbw}
#+NAME: fig:phy:channel_bandwidth:small_signalbw
[[./standalone/phy.pdf]]

\pause 


***** Signal BW larger channel BW: quality degrades 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.3
      :END:   


#+caption: Signal BW larger than channel BW - will lead to quality loss
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:channel_bandwidth:large_signalbw}
#+NAME: fig:phy:channel_bandwidth:large_signalbw
[[./standalone/phy.pdf]]


\pause 

***** Signal BW small enough but at wrong location 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.3
      :END:   

#+caption: Signal BW would fit into channel BW, but is at the wrong part of the spectrum; can be cured by proper modulation techniques 
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:channel_bandwidth:outside_signalbw}
#+NAME: fig:phy:channel_bandwidth:outside_signalbw
[[./standalone/phy.pdf]]



\pause 

*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:

We will revisit the third case in Section \ref{sec:phy:broadband}

**** Relationship of signal bandwidth and channel bandwidth? 
- Insight:
  - *LOCATION* of signal/channel bandwidth in spectrum does not really matter
  - Only *RELATIVE SIZE* is relevant 
- Hence: we can simply talk about channel bandwidth being smaller/larger than signal bandwidth 
- And: Channel bandwidth usually given; signal bandwidth can be influenced by sender/receiver 
  - Consequence: don’t be stupid, use a signal bandwidth that fits into the channel bandwidth 




*** Distortion 
**** Media not only attenuates, but also distorts

- Different frequencies have different propagation speed
  - Some wave lengths travel faster than others
  - Speed of electromagnetic waves only constant in vacuum! 
\pause 
- Consequence: Harmonics arrive at receiver out of phase
  - Amount of phase shift in the medium depends on frequency
  - I.e., at receivers sees something like ($d$ is distance)

\begin{tcolorbox}
\[
\tilde{g}(t) = 1/2 \frac{1}{\alpha(0)} c + \sum_{n=1}^\infty 
\frac{1}{\sqrt{\alpha(n f)}} a_n \sin(2\pi n f t + \alert{\phi_{n f, d}}) + \sum _{n=1}^\infty
\frac{1}{\sqrt{\alpha(n f)}} b_n \cos(2\pi n f t + \alert{\phi_{n f, d}} )
\label{eq:fourier:distorted}
\]
\end{tcolorbox}



- This effect is called *distortion*  of a signal
\pause 
- Mostly an issue in optical fibre
  - \pause Because of long distances and large signal bandwidths 

**** Example with frequency-dependent attenuation and distortion   :noexport:
- Behavior of ``real'' medium already well matched!
- What about the ``wriggling''?


*** Noise 

**** Remaining issue: Noise 

\vskip-2.5em

***** Behavior explained so far 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:

#+caption: Semi-realistic lowpass channel transmitting ASCII b (repetition of Figure)
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:lowpass}
#+NAME: fig:phy:fourier:lowpass
[[./standalone/plots.pdf]]



***** Yet to be explained
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   

#+caption: Remaming effect to explain: noise
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:lowpass:noisy}
#+NAME: fig:phy:fourier:lowpass:noisy
[[./standalone/plots.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:








**** Noise – source? 
- Where does noise come from? 
  - Physics – in particular, random fluctuations of electrons  inside the receiver 
  - Noise is not an effect of the channel; it happens inside the receiver
  - Causes mis-measurement of signal at receiver around the ``actual'' (noise-free) signal amplitude 

\pause 
\vfill
***** Noise is not interference, interference is not noise        :B_alertblock:
      :PROPERTIES:
      :BEAMER_env: alertblock
      :END:

- Noise: an effect *inside the receiver*
- Interference: effect of *other transmitters*
  - Deliberate or by chance 



**** Models for noise 
  - Look at physics, measure effects, count how often how big a deviation occurs 
  - Typical model: noise adds to signal a Gaussian random variable 
    - Zero mean and some standard deviation \sigma, distribution $N(0, \sigma^2)$, uncorrelated in time
    - Variance proportional to temperature (in Kelvin!)
  - This is *Additive White Gaussian Noise* (AWGN)
    - ``white'': if we look at each harmonic (of the noise) separately, we see the
      same effect; homogeneous across frequency 
 
**** Additive White Gaussian Noise 

***** \Gls{awgn}                                               :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{awgn}


**** Noise – quantitatively?                                       :noexport:
- What is the quantitatively relevant effect of noise on a signal? 
\pause
- Detour: Amplitude vs. power 
  - At the end, a receiver will collect *energy* for each bit (see later for details) 
  - Noise disturbs the amplitude of the received signal
  - As a Gaussian with standard deviation sigma 
  - Amplitude: Voltage measured at receiver
- Relationship? 
- Remember Ohm’s law and definition of power 
- U = RI ; P = UI ; E = Pt  !
- Receiver: modelled as constant resistor 


**** Noise – quantitatively? 
- Hence: a noise disturbance of some $\Delta U$ corresponds to a power of $(\Delta U)^2$ 
- The average power of the noise $\bar{N}$ is the average over time of all the instantaneous noise powers

\begin{tcolorbox}
\[
\bar{N} = \lim_{T\rightarrow \infty} \frac{1}{T} \int_{0}^T (\Delta U(t))^2
\mathrm{d} t
\label{eq:avg_noise_power}
\]
\end{tcolorbox}

**** Noise – quantitatively? 
- Since we know the distribution of $\Delta U(t)$ to be Gaussian (and assume
  independence over time) we can rewrite this as:

\begin{tcolorbox}

\[
\bar{N} =  \int_{n=-\infty}^\infty f_{\Delta U(t)} n^2 \mathrm{d} n
\label{eq:avg_noise_power_density}
\]
\end{tcolorbox}

- where $f_{\Delta U}$ is the density of the Gaussian random variable representing noise, with distribution $N(0, \sigma^2)$
  - But this is just the definition of the variance of the random variable !
  - Hence: Noise power is (proportional to) the variance of the noise  



**** Noise vs. signal: Compare power 
- Why is noise power relevant? 
  - We need to receive signal (its power) compared to noise 
- Intuition: 
  - The louder the noise, the harder is to understand 
  - Receiver takes some time to receive a bit 
    - During that time, power is integrated and collected into energy 
    - For the signal, and the noise – this energy is what REALLY matters 

\pause 

***** \Gls{snr}                                                :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{snr}




** Limitations

*** Noise and bandwidth 

**** Converting signals to data: Sampling
- Suppose we have a channel with ample bandwidth, no noise, no distortion
- How does a receiver convert the signal back to data? 

\vskip-1em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:

- Easy: Look at the signal
- Decision rule: 
  - If signal above 0.5, consider bit  a 1
  - If signal below 0.5, consider bit  a 0
- When? E.g., in the middle of a bit duration 


***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   


#+caption: Sampling a signal at the reciever to reconstruct transmitted bits
#+attr_latex: :width 0.95\textwidth :height 0.4\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:correct_bits}
#+NAME: fig:phy:fourier:correct_bits
[[./standalone/plots.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:



**** Sampling in a bandwidth-limited channel

- Even looking at an entire bit duration can fail: Bit 7 incorrectly
  considered a 0  

#+caption: In a bandwidth-limited channel, some bits cannot be recovered correct (even when looking at an entire bit duration)
#+attr_latex: :width 0.95\textwidth :height 0.4\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:wrong_bits:nonoise}
#+NAME: fig:phy:fourier:wrong_bits:nonoise
[[./standalone/plots.pdf]]

- Option: Make interval longer
  - Gives signal more time to cross over the decision line
  - *Inherent limitation from channel bandwidth* 

**** Sampling in a noisy channel 

- With noise added, additional errors can occur
  - Even when, e.g., sampling multiple times per interval and
    averaging 

#+caption: In a noisy channel, additional errors can occur
#+attr_latex: :width 0.95\textwidth :height 0.4\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:fourier:wrong_bits:noisy}
#+NAME: fig:phy:fourier:wrong_bits:noisy
[[./standalone/plots.pdf]]

**** Shannon limit on achievable data rate
- Achievable data rate is fundamentally limited by noise and channel bandwidth $H$
  - More precisely: by the relationship of average signal strength $S$
    compared to average noise $N$ and spectral efficiency $\eta$ 

***** Shannon capacity [[cite:&Shannon1948-nc]]                                          :B_theorem:
      :PROPERTIES:
      :BEAMER_env: theorem
      :END:

  - *Capacity* of a channel: 

\begin{tcolorbox}
\[
C =  H \log_2(1 + \frac{S}{N})
\]
\end{tcolorbox}

 - \pause Achievable data rate: 
\begin{tcolorbox}
\[
\text{maximum \onslide<3->{\alert{error-free}} data rate} < \eta    C
\label{eq:shannon}
\]
\end{tcolorbox}


**** Spectral efficiency 
*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:

 
- Spectral efficiency $\eta$ relates bandwidth to data rate
  - In a normal AWGN channel, only $\eta<1$ feasible 
  - \pause Note: terminology varies here; sometimes, $\eta$ is already
    absorbed in $C$ 
\pause 
- Unit: bits per second, per Hertz
  - Rate that can be realized using one unit of bandwidth 

**** Channel capacity 

***** \Gls{channelcapacity}                                    :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{channelcapacity}


**** Terminology 

\begin{center}
\begin{tikzpicture}
\node[scale=5,align=center]{\textbf{Bandwidth}\\is not the same as \\ \textbf{data rate}!};
\end{tikzpicture}
\end{center}


*** Symbols vs. bits 

****  Use more than just 0 and 1 in the channel
- Who says we can only use 0 and 1 as possible levels for the transmitted signal? 
- Suppose the transmitter can generate signals (current, voltage, \dots) at four different levels, instead of just two
- Then: two bits can be used to select one of the four signal levels = one signal step can transmit two bits

**** Bits vs. symbols 
Distinction:
- *Bits* are 0 or 1, used in ``higher'' layers
- *Symbols* can have 2 or more values, are transmitted over the channel
  - If more than two symbol values, symbols group bits together for transmission
- *Symbol rate*: Rate at which symbols are transmitted
  - Measured in *baud* (symbols/s)
- *Data rate*: Rate at which physical layer sends incoming data bits
  - Measured in *bit/s*
  - Data rate = Symbol rate \cdot bits/symbol


**** Example: Use four-level symbols to encode two bits

- Map 00 $\leadsto$ 0, 01 $\leadsto$ 1, 10 $\leadsto$ 2, 11 $\leadsto$ 3
- Symbol rate is then only half the data rate as each symbol encodes two bits

#+caption: Grouping two consecutive bits into one of four possible symbols
#+attr_latex: :width 0.95\textwidth :height 0.5\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:ascii_b:2bits_per_symbol}
#+NAME: fig:phy:ascii_b:2bits_per_symbol
[[./standalone/plots.pdf]]



**** Data rate with multi-valued symbols – Nyquist 

- Using symbols with multiple values, the data rate can be increased

***** *Nyquist formula*                                           :B_theorem:
      :PROPERTIES:
      :BEAMER_env: theorem
      :END:

\begin{tcolorbox}
\[
\text{maximum data rate} < 2 \frac{\text{bit/s}}{\mathrm{Hz}} H
\log_2 V
\label{eq:nyquist}
\]
\end{tcolorbox}

- where V is the number of discrete symbol values

**** Unlimited data rate with many symbol levels?	
- Nyquist’s theorem appears to indicate that unlimited data rate can be achieved when only enough symbol levels are used
- Is this plausible?
  - More and more symbol levels have to be spaced closer and closer together
- What then about noise? 
  - Even small random noise would then result in one symbol being
    misinterpreted for another
\pause 
- So, not unlimited? 
  - No, of course not: *both* Nyquist *and* Shannon bounds must hold
    at the same time 


*** Old limitations                                                :noexport:

**** Sampling over a noisy or bandwidth-limited channel
- In presence of noise or limited bandwidth (or both), signal will not likely be exactly 0 or 1
- Or whatever 0 and 1 amounts to after attenuation
- Instead of comparing to these precise values, receiver has to use some thresholds within which a signal is declared as a 0 or a 1 


**** Sampling & low bandwidth
- What happens when little bandwidth is available?
- I.e., channel bandwidth < signal bandwidth 
- Assuming same thresholds as before
- At some sampling points, the signal will be outside the thresholds!
- No justifiable decision possible
- What are possible ways out?  
- 
**** Possible way out: Make thresholds wider?
- Wide thresholds would (apparently) reduce opportunity for confusion
- E.g., +/- 0.4
- But: what happens in presence of noise?
- Wider thresholds lead to higher probability of incorrect decisions!
-  $\leadsto$ Not good!
**** Way out 2: Increase time for a single bit
- If channel bandwidth is limited, received signal cannot track very steep raises and falls in the signal
- Hence: give the signal more time to reach the required level for a 0 or a 1 detection.
- This means: Time for a single bit has to be extended!
- Useable data rate is reduced!
- This is a fundamental limitation and cannot be circumvented 
- Formally: maximum data rate < 2H bits/swhere H is the channel bandwidth
- Basic reason: need to sample sufficiently often

**** Definition summary, terminology note
- Signal bandwidth: Difference between lowest and highest frequency considered in a signal 
- Channel bandwidth: Range of frequencies that pass through a channel with acceptable attenuation 
- We only look at bandpass channels, hence: Channel bandwidth: Difference between lowest and highest frequency that pass through a channel with acceptable attenuation 
- Data rate: The number of bits sent per time unit (usually, second) 
- (Shannon) Capacity: An (unreachable) upper bound on the data rate achievable over a channel of a given bandwidth and at a given noise level so that error-free communication is possible. 
- At higher rates, errors cannot be avoided; at lower rates, error-freeness can be guaranteed. 


** Clock extraction

**** When to sample the received signal?
- How does the receiver know WHEN to check the received signal for its value?
  - One typical convention: in the middle of each symbol
  - But when does a symbol start?
    - The length of a symbol is usually known by convention via the symbol rate
- The receiver has to be *synchronized* with the sender at the symbol level
  - (``Symbol'' if more than one bit per symbol; if only one bit per symbol, then ``bit synchronization'' is the usual, yet still sloppy term)
  - The link layer will have to deal with frame synchronization
  - There is also ``character'' synchronization – omitted here

**** Overly simplistic bit synchronization
- One simple option: 
  - Assume that sender and receiver at some point in time are synchronized
  - That both have an internal clock that tics at every symbol step
- Usually, this does not work
  - *Clock drift* is major problem – two different clocks never stay in perfect synchrony 

**** Options to tell the receiver when to sample
- Relying on permanently synchronized clocks does not work
- Provide an explicit clock signal 
  - Needs parallel transmission over some additional channel
  - Must be in synch with the actual data, otherwise pointless
  - $\leadsto$ Useful mostly for short-range communication
- Synchronize the receiver at crucial points (e.g., start of a character or of a block)
- Otherwise, let the receiver clock run freely
- Relies on short-term stability of clock generators (do not diverge too quickly) $\leadsto$ Often reasonable 
- Extract clock information from the received signal itself
  - Treated next in more detail
**** Extract clock information from signal itself
- Put enough information into the data signal itself so that the receiver can know immediately when a bit starts/stops
- Would the simple 0 $\leadsto$ low, 1 $\leadsto$ high mapping of
  bit $\leadsto$ symbol work?
- It should – after all, receiver can use 0-1-0 transitions to detect the length of a bit
- But it fails depending on bit sequences: think of long runs of 1s or 0s – receiver can loose synchronization
- Not nice not to be able to transmit arbitrary data

**** Extract clock information from signal itself – Manchester 

- Idea: At each bit, provide indication to receiver that this is where a bit {starts/stops/has its middle}
  - Example: Manchester encoding 
  - For a 0 bit, have the signal change in the middle of a symbol (=bit) from low to high
  - For a 1 bit, have the signal change in the middle of a symbol (=bit) from high to low 
- Ensures sufficient number of signal transitions
  - Independent of what data is transmitted!
- Price to pay: cuts data rate in half 


** Broadband vs. baseband
\label{sec:phy:broadband}

*** Modulation 

**** Baseband versus broadband transmission
- The transmission schemes described so far: *Baseband transmission*
  - Baseband transmission directly puts the digital symbol sequences onto the wire
  - At different levels of current, voltage, \dots 
- Baseband transmission suffers from the problems discussed above
  - Direct current components have to be avoided
  - Signal bandwidth not included in  channel bandwidth, reshaping
    received signal 
- Possible alternative: *broadband transmission*
  - Examples: Wireless communication, DSL, \dots 
**** Broadband transmission
- Idea: Shift signal into channel bandwidth! 
- Use a sine wave as a *carrier* for the signal  to be transmitted
  - Typically, the sine wave has high frequency and is well within the
    channel bandwidth 
  - But only a single frequency! 
\pause 
- Pure sine wave carries no information, so its shape has to be influenced according to the symbols to be transmitted
  - The carrier has to be *modulated* by the symbols (widening its spectrum)
- Three parameters that can be influenced: $a \sin(2 \pi f t + \phi)$
  - Amplitude $a$
  - Frequency $f$
  - Phase $\phi$
**** Amplitude modulation
- Given a sine wave $f(t) = a \sin(2\pi ft + \phi)$ and a time-varying signal s(t)
  - Signal can be e.g. the symbol levels discussed above
- The *amplitude modulated sine wave* $f_\mathrm{A}(t)$ is given as:
\[ f_\mathrm{A}(t) = \alert{s(t)} \sin (2\pi f t + \phi)\]

- Receiver can extract $s(t)$ from $f_\mathrm{A}(t)$
- Special cases: 
  - $s(t)$ is an analog signal – *amplitude modulation*
  - $s(t)$ is a digital signal –  *amplitude keying*
  - $s(t)$ only takes 0 and 1 (or 0 and a) as values – *on/off keying*

**** Amplitude modulation – example 

#+caption: Amplitude modulation
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:xonxoff}
#+NAME: fig:phy:xonxoff
[[./standalone/modulation.pdf]]


**** Frequency modulation
- The frequency-modulated sine wave $f_\mathrm{F}(t)$ is given by
\[ f_\mathrm{F}(t) = a \sin (2\pi \alert{s(t)} t + \phi)\]

- Typically, $s(t)$ oscillates around the carrier's frequency
- Modulation/keying terminology like for AM

**** Frequency modulation: Example

#+caption: Frequency modulation
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:freqmod}
#+NAME: fig:phy:freqmod
[[./standalone/modulation.pdf]]




**** Phase modulation
- Similarly, a phase-modulated signal is given by 

\[ f_\mathrm{P}(t) = a \sin (2\pi f t +  \alert{s(t)})\]

- Modulation/keying terminology again similar
- Example:
  - Two phase values used, $s(t) \in \{0, \pi\}$: *Binary Phase Shift
    Keying* (BPSK)


**** Phase modulation: Example 
#+caption: Phase-modulated signal
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:phasemod}
#+NAME: fig:phy:phasemod
[[./standalone/modulation.pdf]]



**** Phase modulation with multiple values per symbol
- A receiver can usually distinguish phase shifts quite well 
- Hence: Use phases, e.g.,  \pi/4, 3/4\pi, 5/4\pi, 7/4\pi  to encode two bits per symbol
  - Four functions to choose from 
- Result: Data rate is twice the symbol rate
- Technique is called *Quadrature Phase Shift Keying*  (QPSK)


**** Terminology 

***** \Gls{baseband}                                           :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{baseband}

***** \Gls{broadband}                                          :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{broadband}


**** Terminology 

***** \Gls{carrier}                                            :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{carrier}

***** \Gls{modulation}                                         :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{modulation}


***** \Gls{waveform}                                           :B_definition:
      :PROPERTIES:
      :BEAMER_env: definition
      :END:

      \Glsdesc{waveform}



*** Constellation diagrams
    :PROPERTIES:
    :BEAMER_env: quotation
    :END:

**** Visualization: 

- How to represent QPSK (and generalizations)? 
\pause
- Suppose: we use only step-functions to modulate amplitude,
  frequency, or phase  
  - Fixed combination for each symbol
\pause
- Suppose: We work at a fixed carrier frequency (no FM)
\pause
- Then: a symbol corresponds to an (amplitude, phase) combination 
  - Which is just a complex number in polar coordinates!
  - Which is just a representation of the waveform for that symbol


**** Constellation diagrams

#+caption: Visualizing QPSK modulation as a constellation diagram
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:constellation:qpsk}
#+NAME: fig:phy:constellation:qpsk
[[./standalone/constellation.pdf]]




**** Constellation diagrams: Justification                         :noexport:
- Justification for constellation diagrams: Euler’s formula 
- Relevance here: Think of the signal as the real part of a complex function 
- With amplitude, phase, and frequency

**** Constellation diagrams: Justification                         :noexport:
- Rewrite shorthand:  
- WS 19/20, v 1.11
- Computer Networks - Physical layer
- 61
**** Complex channel models                                        :noexport:
- Channel effects in this model? 
- At given frequency f, what happens to a constellation point? 
- It changes amplitude, it changes phase 
- In effect, received signal is:
- Channel is a multiplication by a complex number!  
- The channel coefficient 
- Assumption here: constant over time 



**** Channel effect in constellation diagram 

\vskip-2.5em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:




- Transmission: Attenuates and delays a signal
  - Changes amplitude by $a'$ and phase $\phi'$!
- More details: Master course on mobile communications 

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   

#+caption: Effect of a channel on signal, visualized as a shift of a constellation point
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:constellation:qpsk:channel}
#+NAME: fig:phy:constellation:qpsk:channel
[[./standalone/constellation.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:




*** Combined modulations 

**** Combinations of different modulations




\vskip-2.5em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:


- Constellation diagrams lend themselves easily to more sophisticated
  modulation techniques 
- Example: Combination of amplitude and phase keying into a 16-QAM
  scheme, supporting 4 bits/symbol 
\pause 
- Price to  pay: more susceptible to noise
  - Compared against QPSK under same maximum signal power 

\onslide<1->
***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   
#+caption: 16-QAM as combination of amplitude and phase modulation, visualized as constellation diagram
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:constellation:16qam}
#+NAME: fig:phy:constellation:16qam
[[./standalone/constellation.pdf]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:





*** Error rates 
**** Bit error rate as function of SNR 
- The higher the SNR, the better the reception
  - The more reliably can signals be converted to bits at receiver
  - Actually: *Energy per bit* $E_b$ – takes into account data rate, #bits/symbol
    - We simplify here to signal power
- Concrete bit error probability/rate (BER) depends on SNR and used modulation 
- Example: differential phase shift keying (DPSK)

\[
\mathrm{BER}(\mathrm{SNR}) < \frac{1}{2}\mathrm{e}^{-\mathrm{SNR}}
\label{eq:dpsk:snr:bound}
\]

**** Example derivation for SNR dependency                         :noexport:
**** Example derivation for SNR dependency                         :noexport:
**** Examples for SNR $\leadsto$ BER mappings

#+caption: Example BER curves for two modulation techniques (blue: DPSK, red: fictional) as function of SNR
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:ber:snr}
#+NAME: fig:phy:ber:snr
[[./standalone/constellation.pdf]]


** Structure

**** Digital vs. analog signals
- A sender has two principal options what types of signals to generate
  - It can choose from a *finite set* of different signals – *digital transmission* 
  - There is an *infinite set* of possible signals – *analog transmission*
- Simplest example: Signal corresponds to current/voltage level on the wire
  - In the digital case, there are finitely many voltage levels to choose from
  - In the analog case, any voltage is legal
- More complicated example: finite/infinitely many sine functions
  - In both cases, the resulting *wave forms* in the medium can well
    be continuous functions of time! 
- Advantage of digital signals: There is a principal chance that the receiver can precisely reconstruct the transmitted signal 
**** Structure of digital communication systems 
- How to put these functions together into a working digital communication system? 
- How to structure transmitter and receiver?  
- How to bridge from a *data source* to a *data sink*? 
- Essential functions for baseband transmission

#+caption: Structure of a baseband system
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:structure:baseband}
#+NAME: fig:phy:structure:baseband
[[./standalone/phy.pdf]]


**** Functions
- Source encode: Remove redundant or irrelevant data
  - E.g., lossy compression (MP3, MPEG 4); lossless compression (Huffmann coding, runlength coding)
- Channel encode: Map source bits to channel symbols
  - Potentially several bits per symbol
  - May add redundancy to protect against errors 
  - Tailored to channel characteristics
- Physically transmit: Turn the channel symbols into physical signals
- At receiver: Reverse all these steps

**** Structure of a (digital) broadband system
- Previous example assumed a simple physical transmission in baseband 
- Using broadband transmission adds complexity to signal generation


#+caption: Structure of a broadband system
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:structure:broadband}
#+NAME: fig:phy:structure:broadband
[[./standalone/phy.pdf]]


**** Separation of source and channel coding? 

- Is it actually a good idea to separate source coding and channel coding? 
  - Better results available when combining these two coding steps?
  - That would mean: depending on the channel, information has to be
    represented differently  

- Good news: In many important settings, separating source and channel coding is indeed optimal 
  - In particular, single sender, single receiver 
  - Shannon’s source-channel separation theorem 

- Interesting news: In many other situations, joint source/channel coding is superior
  - In particular, broadcast, multiple senders, relays, \dots 

**** Tricky part: Receiver!
- Difficult: How to decide, given an incoming, noisy version of a channel symbol (=a waveform) what the originally sent symbol/waveform was? 
- Receiver (channel decoder) knows, for each channel symbol
  - All *legal* waveforms $s_1(t), …, s_m(t)$
  - The actual, incoming, distorted waveform $r(t) = s_i(t) + n(t)$
  - Where $n(t)$ is noise, $i$ is *unknown* index of transmitted channel symbol
- How to determine $i$? 

**** Example: Coherent receiver
- Coherent receiver: Receiver has perfect time synchronization with transmitter, perfect phase
  - Not true in practice, a simplification
- Conceptually: Receiver compares $r(t)$ with *all* $s_i(t)$, computes
  distance measure
  - E.g.: \[  d_i = || r(\cdot) - s_i(\cdot) ||_2 ^2 = \int_0^T
    (r(t) - s_i(t))^2 \mathrm{d} t  \]
  - T is length of a channel symbol
- Result is that waveform $i^*$ that minimizes this distance measure, 
\[ i^* = \mathrm{argmin}_i d_i  \]
 - This waveform is assumed to be the one that the transmitter has sent

** Conclusion 

**** Example physical layers
\vskip-2.5em

***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:




- Guided transmission media
  - Copper wire – twisted pair
  - Copper wire – coaxial cable
  - Fiber optics
- Wireless transmission
  - Electromagnetic in various frequency bands
  - Ultrasound 



#+caption: Twisted pair CAT6 cable [[https://commons.wikimedia.org/wiki/File:Optical_fiber_cable.jpg][(Wikimedia)]]
#+attr_latex: :width 0.95\textwidth :height 0.2\textheight :options keepaspectratio
#+NAME: fig:phy:cat6
[[./figures/CAT6_twisted_pair.jpg]]


***** 
      :PROPERTIES:
      :BEAMER_env: block
      :BEAMER_col: 0.48
      :END:   


#+caption: Optical fibre [[https://en.wikipedia.org/wiki/File:Optical_Fiber_Modes.jpg][(Wikipedia)]]
#+attr_latex: :width 0.95\textwidth :height 0.2\textheight :options keepaspectratio
#+NAME: fig:phy:optical_fibre
[[./figures/Optical_fiber_cable.jpg]]

#+caption: Transmission modes in an optical fibre [[https://commons.wikimedia.org/wiki/File:CAT6_twisted_pair.JPG][(Wikimedia)]]
#+attr_latex: :width 0.95\textwidth :height 0.2\textheight :options keepaspectratio
#+NAME: fig:phy:optical_fibre
[[./figures/fibre_modes.jpg]]



*****                               :B_ignoreheading:
      :PROPERTIES:
      :BEAMER_env: ignoreheading
      :END:



**** Electromagnetic spectrum

#+caption: Various frequency bands for transmission in guided and unguided physical media
#+attr_latex: :width 0.95\textwidth :height 0.6\textheight :options keepaspectratio,page=\getpagerefnumber{page:phy:media}
#+NAME: fig:phy:media
[[./standalone/phy.pdf]]



**** Conclusion
- The physical layer is responsible for turning a logical sequence of bits into a physical signal that can propagate through space
- Many different forms of physical signals are possible
- Signals are limited by their propagation in a physical medium (limited bandwidth, attenuation, dispersion) and by noise
- Bits can be combined into multi-valued symbols for transmission
- Baseband transmission is fraught with problems, partially overcome by modulating a signal onto a carrier (broadband transmission)
  
** Stuff                                                           :noexport:
**** figure
Optical_fiber_cable.jpg

https://commons.wikimedia.org/wiki/File:Optical_fiber_cable.jpg



fibre_modes.jpg
https://en.wikipedia.org/wiki/File:Optical_Fiber_Modes.jpg
Kebes



CAT6_twisted_pair.JPG
https://commons.wikimedia.org/wiki/File:CAT6_twisted_pair.JPG
Agott, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>,
via Wikimedia Commons



*** Old attenuation material                                       :noexport:
**** Fact 1: Signals are attenuated in a physical medium           :noexport:
- Attenuation \alpha: Ratio of transmitted to received power
-  
- High attenuation $\leadsto$ low power arrives at receiver
- Attenuation depends on 
- Actual medium
- Distance between sender and receiver
-  … other factors
- Normalized, typically given in dB 
- dB: logarithmic expressionof ratio
- 
**** Fact 2: Not all frequencies pass through a medium             :noexport:
- Previous picture assumed that all frequencies travel unhindered through a physical medium
- This is not the case for real media!
- Simplified behavior: frequencies up to given upper bound fc  can pass; higher frequencies are suppressed
- Mathematically: the Fourier series is cut off at a certain harmonic
- High frequencies are attenuated to zero
- Intuition: Range of frequencies that can pass through a medium is relevant 

**** Channel with limited frequency range – example 
- Result when fewer and fewer harmonics are transported
**** Fact 3: Frequency-selective attenuation, bandwidth
- Strictly speaking: channel bandwidth is caused by frequency-selective attenuation 
- Often: both small and large frequencies are attenuated 
- Assuming a cut-off frequency fc is too simple-minded
**** Example with frequency-dependent attenuation
- Suppose attenuation is 2, 2.5, 3.333… , 5, 10, 1 for the 1st, 2nd, … harmonic
**** Relationship of signal bandwidth and channel bandwidth? 
- Case 1: Signal bandwidth fits completely into channel bandwidth
- All good 
- Case 2: Signal wider than channel 
- You loose signal quality 
- Case 3: It would fit, but at the wrong place  
- No problem: Move signal left or right (``modulation''); compare later  
- 
- WS 19/20, v 1.11
- Computer Networks - Physical layer
- 21
**** Relationship of signal bandwidth and channel bandwidth? 
- Consequence:
- LOCATION of signal/channel bandwidth in spectrum does not really matter
- Only RELATIVE SIZE is relevant 
- Hence: we can simply talk about channel bandwidth being smaller/larger than signal bandwidth 
- And: Channel bandwidth usually given; signal bandwidth can be influenced by sender/receiver 
- Don’t be stupid: Use a signal bandwidth that fits into the channel bandwidth 
- WS 19/20, v 1.11
- Computer Networks - Physical layer
- 22


